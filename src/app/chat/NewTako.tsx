/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 new-tako.glb -t 
*/

import * as THREE from "three";
import React, { FC, useEffect } from "react";
import { useGraph } from "@react-three/fiber";
import { useGLTF, PerspectiveCamera, useAnimations } from "@react-three/drei";
import { SkeletonUtils } from "three-stdlib";
import { ActionName, GLTFResult } from "@/types/Model";

type Props = JSX.IntrinsicElements["group"] & {
	actionName: ActionName;
};

const Model: FC<Props> = ({ actionName }, props) => {
	const group = React.useRef<THREE.Group>();
	const { scene, animations } = useGLTF("/model/new-tako.glb");
	const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene]);
	const { nodes, materials } = useGraph(clone) as GLTFResult;
	const { actions } = useAnimations(animations, group);

	useEffect(() => {
		if (actions && animations.length > 0) {
			// すべてのアクションを停止
			Object.values(actions).forEach((action) => action?.stop());
			// 指定されたアクションを再生
			const selectedAction = actions[actionName];
			if (selectedAction) {
				selectedAction.play();
			}
		}
	}, [actions, animations, actionName]);

	return (
		<group ref={group} {...props} dispose={null}>
			<group name="Scene" rotation={[0, Math.PI, 0]}>
				<group name="アーマチュア" scale={0.104}>
					<primitive object={nodes.Bone} />
					<primitive object={nodes.eyecontrollerboth} />
					<primitive object={nodes.ik1L} />
					<primitive object={nodes.ik2L} />
					<primitive object={nodes.ik3L} />
					<primitive object={nodes.ik4L} />
					<primitive object={nodes.ik1R} />
					<primitive object={nodes.ik2R} />
					<primitive object={nodes.ik3R} />
					<primitive object={nodes.ik4R} />
					<group name="球">
						<skinnedMesh
							name="球_1"
							geometry={nodes.球_1.geometry}
							material={materials.skin}
							skeleton={nodes.球_1.skeleton}
						/>
						<skinnedMesh
							name="球_2"
							geometry={nodes.球_2.geometry}
							material={materials.eye}
							skeleton={nodes.球_2.skeleton}
						/>
						<skinnedMesh
							name="球_3"
							geometry={nodes.球_3.geometry}
							material={materials.eyewhite}
							skeleton={nodes.球_3.skeleton}
						/>
						<skinnedMesh
							name="球_4"
							geometry={nodes.球_4.geometry}
							material={materials.eyewrapper}
							skeleton={nodes.球_4.skeleton}
						/>
					</group>
				</group>
				<group
					name="カメラ"
					position={[-0.303, 0, -22.549]}
					rotation={[1.573, 0, 3.123]}
				>
					<PerspectiveCamera
						name="カメラ_Orientation"
						makeDefault={false}
						far={1000}
						near={0.1}
						fov={16.461}
						rotation={[-Math.PI / 2, 0, 0]}
					/>
				</group>
				<group
					name="スポット"
					position={[4.034, 4.187, -3.474]}
					rotation={[0.315, 0.782, -1.093]}
				>
					<spotLight
						intensity={500} // 強度を下げる
						angle={Math.PI / 8}
						penumbra={0.15}
						decay={2}
						rotation={[-Math.PI / 2, 0, 0]}
						target={nodes.スポット_Orientation.target}
					>
						<primitive
							object={nodes.スポット_Orientation.target}
							position={[0, 0, -1]}
						/>
					</spotLight>
				</group>
			</group>
		</group>
	);
};

useGLTF.preload("/model/new-tako.glb");

export default Model;
